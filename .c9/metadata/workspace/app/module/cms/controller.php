{"changed":true,"filter":false,"title":"controller.php","tooltip":"/app/module/cms/controller.php","value":"<?php\nnamespace Module\\Cms;\n\nclass Controller extends \\Framework\\Controller\n{\n    /**\n     *\n     */\n    public function __construct()\n    {\n        parent::__construct();\n\n        // load core models\n        $this->user     = new \\Framework\\Model('user');\n        $this->page     = new \\Framework\\Model('page');\n        $this->menu     = new \\Framework\\Model('menu');\n        $this->tasks    = new \\Framework\\Model('tasks');\n        $this->module   = new \\Framework\\Model('module');\n        $this->servers  = new \\Framework\\Model('servers');\n        $this->objects  = new \\Framework\\Model('objects');\n        $this->snippet  = new \\Framework\\Model('snippet');\n        $this->template = new \\Framework\\Model('template');\n        $this->settings = new \\Framework\\Model('settings');\n        $this->tasksource = new \\Framework\\Model('tasksource');\n    }\n\n    /**\n     *\n     */\n    public function index(\\Base $f3, $params)\n    {\n        // load local plinker server config\n        $server = $this->servers->load(1);\n\n        // if empty insert self into db\n        if (empty($server->id)) {\n            /**\n             * Plinker Config\n             */\n            $plinker = [\n                // plinker configuration\n                'plinker' => [\n                    // endpoint should point to this instance\n                    'endpoint' => 'http://'.$_SERVER['HTTP_HOST'],\n\n                    // network keys\n                    'public_key'  => hash('sha256', microtime(true).uniqid(true)),\n\n                    // should be the same across all servers\n                    'private_key' => $f3->get('plinker.private_key'),\n\n                    'enabled' => $f3->get('plinker.enabled'),\n                    'encrypted' => true\n                ],\n\n                // database connection\n                'database' => $f3->get('db'),\n\n                // displays output to task runner console\n                'debug' => true,\n\n                // daemon sleep time\n                'sleep_time' => 1\n            ];\n\n            // insert config into database\n            $server = $this->servers->create([\n                'name'    => $_SERVER['HTTP_HOST'],\n                'endpoint'    => $plinker['plinker']['endpoint'],\n                'public_key' => $plinker['plinker']['public_key'],\n                'private_key' => $plinker['plinker']['private_key'],\n                'enabled' =>  $plinker['plinker']['enabled'],\n                'encrypted' =>  $plinker['plinker']['encrypted'],\n                'config' => json_encode($plinker)\n            ]);\n            $this->servers->store($server);\n\n            $server = $server->fresh();\n        }\n\n        // get site settings\n        foreach ((array) $this->settings->findAll() as $row) {\n            $f3->set('setting.'.$row->key, $row->value);\n        }\n\n        // plinker handler\n        /**\n         * Plinker Server\n         */\n        if ($_SERVER['REQUEST_METHOD'] == 'POST') {\n\n            /**\n             * Plinker server listener\n             */\n            if (isset($_POST['data']) &&\n                isset($_POST['token']) &&\n                isset($_POST['public_key'])\n            ) {\n                // test its encrypted\n                file_put_contents('./tmp/encryption-proof.txt', print_r($_POST, true));\n\n                //\n                $server = new \\Plinker\\Core\\Server(\n                    $_POST,\n                    hash('sha256', gmdate('h').$server->public_key),\n                    hash('sha256', gmdate('h').$server->private_key)\n                );\n                exit($server->execute());\n            }\n        }\n\n        if ($this->page->count() == 0) {\n            $f3->set('setting.autogenerate', true);\n        }\n\n        //\n        if (!empty($f3->get('setting.autogenerate'))) {\n            // create page (wiki style)\n            $page = $this->page->findOrCreate([\n                'slug' => $f3->get('PATH')\n            ]);\n\n            // hidden/completed status\n            $page->hide = isset($page->hide) ? (empty($page->hide) ? 0 : 1) : 0;\n\n            // fix slug\n            $slug = explode('/', '/'.trim($f3->get('PATH'), '/ '));\n\n            // define a module and assign it to it\n            if (empty($page->module_id)) {\n                $module = $this->module->findOrCreate([\n                    'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')\n                ]);\n\n                $page->module = $module;\n            }\n        } else {\n            // get page by path\n            $page = $this->page->findOne('slug = ?', [\n                $f3->get('PATH')\n            ]);\n\n            // page not found\n            if (empty($page)) {\n                // second attempt - get page by dirname(path)\n                $page = $this->page->findOne('slug = ?', [\n                    dirname($f3->get('PATH'))\n                ]);\n\n                // must be found\n                if (empty($page)) {\n                    $f3->error(404);\n                }\n            }\n        }\n\n        // visibility\n        // when not signed in\n        if (!empty($f3->get('SESSION.user')) && $page->visibility == 2) {\n            $f3->error(401);\n        }\n        // when signed in\n        if (empty($f3->get('SESSION.user')) && $page->visibility == 3) {\n            $f3->error(401);\n        }\n        // check for admin/developer\n        if (empty($f3->get('SESSION.developer')) && $page->visibility == 4) {\n            $f3->error(401);\n        }\n        // page is disabled\n        if ($page->visibility == 5) {\n            $f3->error(404);\n        }\n\n        if (empty($page->template_id)) {\n            $page->template_id = 1;\n        }\n\n        if (empty($page->body) && $page->id == 1) {\n            $page->body = '<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <h1 class=\"page-header\">\n            Welcome <small> - to my little website.</small>\n        </h1>\n        <ol class=\"breadcrumb\">\n            <li class=\"active\"><i class=\"fa fa-dashboard\"></i> Home</li>\n        </ol>\n    </div>\n</div>\n\n<p>You can edit me by signing in <a href=\"/admin\">here</a> as <strong>admin:admin</strong>.</p>';\n        } elseif (empty($page->body) && empty($page->views)) {\n            if (empty($page->title)) {\n                $page->title = ucwords(str_replace('/', ' - ', trim($f3->get('PATH'), '/ ')));\n            }\n            \n            if (empty($page->title)) {\n                $page->title = 'Home';\n            }\n\n            $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";\n            $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\";\n\n            if (!empty($slug[2])) {\n                $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";\n                $breadcrumb .= '<li><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\\t\";\n                $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-page-o\"></i> '.$slug[2].'</li>'.PHP_EOL.\"\\t\\t\";\n            }\n\n            $page->body = '<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <h1 class=\"page-header\">\n            '.$page->title.' <small> - Auto generated page.</small>\n        </h1>\n        <ol class=\"breadcrumb\">\n            '.$breadcrumb.'</ol>\n    </div>\n</div>\n\n<p>\n    This page and any associated module have been automatically generated.\n    You should now go code it <a href=\"/admin/page/edit/'.$page->id.'\">here</a>.<br>\n    If you no longer want pages to be automatically generated then <a href=\"/admin/settings\">turn off the setting here</a>.\n</p>\n';\n        }\n\n        //\n        $_SESSION['template_path'] = 'tmp/template/';\n        $_SESSION['template_id']   = (int) $page->template_id;\n\n        $page->views = (int) $page->views+1;\n\n        $this->page->store($page);\n\n        // get menus\n        $f3->set('menus', (array) $this->menu->findAll('ORDER BY `order` ASC, id ASC'));\n\n        // execute all object code\n        foreach ((array) $this->objects->findAll('ORDER BY priority ASC, id ASC') as $row) {\n            ob_start();\n            eval('?>'.$row->source);\n            $page->body = ob_get_clean().$page->body;\n        }\n\n        // execute module beforeload source\n        ob_start();\n        eval('?>'.@$page->module->beforeload);\n        $page->body = ob_get_clean().$page->body;\n\n        // execute page beforeload\n        if (!empty($page->beforeload)) {\n            ob_start();\n            eval('?>'.$page->beforeload);\n            $page->body = ob_get_clean().$page->body;\n        }\n\n        // execute page body\n        if (!empty($page->body)) {\n            ob_start();\n            eval('?>'.$page->body);\n            $page->body = ob_get_clean();\n        }\n\n        // execute page javascript\n        if (!empty($page->javascript)) {\n            ob_start();\n            eval('?>'.$page->javascript);\n            $f3->set('javascript', $f3->get('javascript').ob_get_clean());\n        }\n\n        // execute page css\n        if (!empty($page->css)) {\n            ob_start();\n            eval('?>'.$page->css);\n            $f3->set('css', $f3->get('css').ob_get_clean());\n        }\n\n        // inject additional js for live preview\n        if (!empty($f3->get('SESSION.developer'))) {\n            ob_start();\n            ?>\n            <script>\n            // developer only - cross tab live content preview\n            $(document).ready(function() {\n                if ($('.ajax-container').length > 0) {\n                    $(window).bind('storage', function(e) {\n                        $('.ajax-container').html($('<div />').html(window.localStorage.getItem('preview-body')));\n                    });\n                }\n            });\n            </script>\n            <?php\n            $f3->set('javascript', $f3->get('javascript').ob_get_clean());\n        }\n\n        // check template exists - fallback to default\n        if (!file_exists('tmp/template/'.$page->template_id.'/template.php')) {\n            //\n            $_SESSION['template_path'] = 'app/template/default/';\n            $_SESSION['template_id'] = null;\n            $template = 'app/template/default/template.php';\n        } else {\n            $template = 'tmp/template/'.$page->template_id.'/template.php';\n        }\n\n        //\n        $f3->mset([\n            'template' => $template,\n            'page' => [\n                'page_id' => $page->id,\n                'title' => $page->title,\n                'body' => $page->body\n            ]\n        ]);\n    }\n\n    /**\n     *\n     */\n    public function admin(\\Base $f3, $params)\n    {\n        $bypass = ($params['action'] == 'template' && $params['sub_action'] == 'preview');\n\n        // check user is logged in\n        if (empty($f3->get('SESSION.developer')) && !$bypass) {\n            if ($params['action'] != 'sign-in') {\n                $f3->reroute('/admin/sign-in');\n            }\n        }\n\n        // get site settings\n        foreach ((array) $this->settings->findAll() as $row) {\n            $f3->set('setting.'.$row->key, $row->value);\n        }\n\n        //\n        $_SESSION['template_path'] = 'app/template/default/';\n        $_SESSION['template_id'] = null;\n        \n        $action = str_replace('-', '_', strtolower($params['action']));\n        $this->action = new Action\\Admin();\n\n        if (empty($action)) {\n            $action = 'index';\n        }\n\n        if (method_exists($this->action, $action)) {\n            $this->action->{$action}($f3, $params);\n            \n            // AJAX - Switch to ajax template\n            if (!empty($f3->get('AJAX'))) {\n                $f3->set('template', 'app/module/cms/view/ajax.php');\n            }\n        } else {\n            $f3->error(404);\n        }\n    }\n\n}","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":126,"column":35},"end":{"row":126,"column":36},"action":"insert","lines":["_"],"id":1589}],[{"start":{"row":126,"column":36},"end":{"row":126,"column":37},"action":"insert","lines":["i"],"id":1590}],[{"start":{"row":126,"column":37},"end":{"row":126,"column":38},"action":"insert","lines":["d"],"id":1591}],[{"start":{"row":129,"column":0},"end":{"row":133,"column":36},"action":"remove","lines":["            $module = $this->module->findOrCreate([","                'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')","            ]);","            ","            $page->module = $module;"],"id":1592}],[{"start":{"row":127,"column":16},"end":{"row":131,"column":36},"action":"insert","lines":["            $module = $this->module->findOrCreate([","                'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')","            ]);","            ","            $page->module = $module;"],"id":1593}],[{"start":{"row":128,"column":0},"end":{"row":128,"column":4},"action":"insert","lines":["    "],"id":1594},{"start":{"row":129,"column":0},"end":{"row":129,"column":4},"action":"insert","lines":["    "]},{"start":{"row":130,"column":0},"end":{"row":130,"column":4},"action":"insert","lines":["    "]},{"start":{"row":131,"column":0},"end":{"row":131,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":127,"column":24},"end":{"row":127,"column":28},"action":"remove","lines":["    "],"id":1595}],[{"start":{"row":127,"column":20},"end":{"row":127,"column":24},"action":"remove","lines":["    "],"id":1596}],[{"start":{"row":127,"column":16},"end":{"row":127,"column":20},"action":"remove","lines":["    "],"id":1597}],[{"start":{"row":133,"column":0},"end":{"row":134,"column":1},"action":"remove","lines":[""," "],"id":1598}],[{"start":{"row":132,"column":13},"end":{"row":133,"column":0},"action":"remove","lines":["",""],"id":1599}],[{"start":{"row":0,"column":0},"end":{"row":339,"column":1},"action":"remove","lines":["<?php","namespace Module\\Cms;","","class Controller extends \\Framework\\Controller","{","    /**","     *","     */","    public function __construct()","    {","        parent::__construct();","        ","        // load core models","        $this->user     = new \\Framework\\Model('user');","        $this->page     = new \\Framework\\Model('page');","        $this->menu     = new \\Framework\\Model('menu');","        $this->tasks    = new \\Framework\\Model('tasks');","        $this->module   = new \\Framework\\Model('module');","        $this->servers  = new \\Framework\\Model('servers');","        $this->objects  = new \\Framework\\Model('objects');","        $this->snippet  = new \\Framework\\Model('snippet');","        $this->template = new \\Framework\\Model('template');","        $this->settings = new \\Framework\\Model('settings');","        $this->tasksource = new \\Framework\\Model('tasksource');","    }","","    /**","     *","     */","    public function index(\\Base $f3, $params)","    {","        // load local plinker server config","        $server = $this->servers->load(1);","","        // if empty insert self into db","        if (empty($server->id)) {","            /**","             * Plinker Config","             */","            $plinker = [","                // plinker configuration","                'plinker' => [","                    // endpoint should point to this instance","                    'endpoint' => 'http://'.$_SERVER['HTTP_HOST'],","            ","                    // network keys","                    'public_key'  => hash('sha256', microtime(true).uniqid(true)),","                    ","                    // should be the same across all servers","                    'private_key' => $f3->get('plinker.private_key'),","            ","                    'enabled' => $f3->get('plinker.enabled'),","                    'encrypted' => true","                ],","                    ","                // database connection","                'database' => $f3->get('db'),","                    ","                // displays output to task runner console","                'debug' => true,","                    ","                // daemon sleep time","                'sleep_time' => 1","            ];","","            // insert config into database","            $server = $this->servers->create([","                'name'    => $_SERVER['HTTP_HOST'],","                'endpoint'    => $plinker['plinker']['endpoint'],","                'public_key' => $plinker['plinker']['public_key'],","                'private_key' => $plinker['plinker']['private_key'],","                'enabled' =>  $plinker['plinker']['enabled'],","                'encrypted' =>  $plinker['plinker']['encrypted'],","                'config' => json_encode($plinker)","            ]);","            $this->servers->store($server);","            ","            $server = $server->fresh();","        }","","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value); ","        }","        ","        // plinker handler","        /**","         * Plinker Server","         */","        if ($_SERVER['REQUEST_METHOD'] == 'POST') {","        ","            /** ","             * Plinker server listener","             */","            if (isset($_POST['data']) && ","                isset($_POST['token']) && ","                isset($_POST['public_key'])","            ) {","                // test its encrypted","                file_put_contents('./tmp/encryption-proof.txt', print_r($_POST, true));","        ","                //","                $server = new \\Plinker\\Core\\Server(","                    $_POST,","                    hash('sha256', gmdate('h').$server->public_key),","                    hash('sha256', gmdate('h').$server->private_key)","                );","                exit($server->execute());","            }","        }","","        //","        if (!empty($f3->get('setting.autogenerate'))) {","            // create page (wiki style)","            $page = $this->page->findOrCreate([","                'site' => $_SERVER['HTTP_HOST'],","                'slug' => $f3->get('PATH')","            ]);","            ","            // hidden/completed status","            $page->hide = isset($page->hide) ? (empty($page->hide) ? 0 : 1) : 0;","            ","            // fix slug","            $slug = explode('/', '/'.trim($f3->get('PATH'), '/ '));","            ","            // define a module and assign it to it","            if (empty($page->module_id)) {","                $module = $this->module->findOrCreate([","                    'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')","                ]);","                ","                $page->module = $module;","            }","        } else {","            // get page by path","            $page = $this->page->findOne('site = ? AND slug = ?', [","                $_SERVER['HTTP_HOST'],","                $f3->get('PATH')","            ]);","            ","            // page not found","            if (empty($page)) {","                // second attempt - get page by dirname(path)","                $page = $this->page->findOne('site = ? AND slug = ?', [","                    $_SERVER['HTTP_HOST'],","                    dirname($f3->get('PATH'))","                ]);","","                // must be found","                if (empty($page)) {","                    $f3->error(404);","                }","            }","        }","        ","        // visibility","        // when not signed in","        if (!empty($f3->get('SESSION.user')) && $page->visibility == 2) {","            $f3->error(401);","        }","        // when signed in","        if (empty($f3->get('SESSION.user')) && $page->visibility == 3) {","            $f3->error(401);","        }","        // check for admin/developer","        if (empty($f3->get('SESSION.developer')) && $page->visibility == 4) {","            $f3->error(401);","        }","        // page is disabled","        if ($page->visibility == 5) {","            $f3->error(404);","        }","","        if (empty($page->template_id)) {","            $page->template_id = 1;","        }","        ","        if (empty($page->body) && $page->id == 1) {","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            Welcome <small> - to my little website.</small>","        </h1>","        <ol class=\"breadcrumb\">","            <li class=\"active\"><i class=\"fa fa-dashboard\"></i> Home</li>","        </ol>","    </div>","</div>","","<p>You can edit me by signing in <a href=\"/admin\">here</a> as <strong>admin:admin</strong>.</p>';","        } elseif (empty($page->body) && empty($page->views)) {","            if (empty($page->title)) {","                $page->title = ucwords(str_replace('/', ' - ', trim($f3->get('PATH'), '/ ')));","            }","            ","            $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","            $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\";","           ","            if (!empty($slug[2])) {","                $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-page-o\"></i> '.$slug[2].'</li>'.PHP_EOL.\"\\t\\t\";","            }","","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            '.$page->title.' <small> - Auto generated.</small>","        </h1>","        <ol class=\"breadcrumb\">","            '.$breadcrumb.'</ol>","    </div>","</div>","","<p>","    This page and any associated module have been automatically generated. ","    You should now go code it <a href=\"/admin/page/edit/'.$page->id.'\">here</a>.<br>","    If you no longer want pages to be automatically generated then <a href=\"/admin/settings\">turn off the setting here</a>.","</p>","';","        }","        ","        //","        $_SESSION['template_path'] = 'tmp/template/';","        $_SESSION['template_id']   = (int) $page->template_id;","        ","        $page->views = (int) $page->views+1;","        ","        $this->page->store($page);","","        // get menus","        $f3->set('menus', (array) $this->menu->findAll('ORDER BY `order` ASC, id ASC'));","","        // execute all object code","        foreach ((array) $this->objects->findAll('ORDER BY priority ASC, id ASC') as $row) {","            ob_start();","            eval('?>'.$row->source);","            $page->body = ob_get_clean().$page->body;","        }","        ","        // execute module beforeload source","        ob_start();","        eval('?>'.@$page->module->beforeload);","        $page->body = ob_get_clean().$page->body;","        ","        // execute page beforeload","        if (!empty($page->beforeload)) {","            ob_start();","            eval('?>'.$page->beforeload);","            $page->body = ob_get_clean().$page->body;","        }","        ","        // execute page body","        if (!empty($page->body)) {","            ob_start();","            eval('?>'.$page->body);","            $page->body = ob_get_clean();","        }","","        // execute page javascript","        if (!empty($page->javascript)) {","            ob_start();","            eval('?>'.$page->javascript);","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        // execute page css","        if (!empty($page->css)) {","            ob_start();","            eval('?>'.$page->css);","            $f3->set('css', $f3->get('css').ob_get_clean());","        }","        ","        // inject additional js for live preview ","        if (!empty($f3->get('SESSION.developer'))) {","            ob_start();","            ?>","            <script>","            // developer only - cross tab live content preview","            $(document).ready(function() {","                if ($('.ajax-container').length > 0) {","                    $(window).bind('storage', function(e) {","                        $('.ajax-container').html($('<div />').html(window.localStorage.getItem('preview-body')));","                    });","                }","            });","            </script>","            <?php","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        //","        $f3->mset([","            'template' => 'tmp/template/'.$page->template_id.'/template.php',","            'page' => [","                'page_id' => $page->id,","                'title' => $page->title,","                'body' => $page->body","            ]","        ]);","    }","    ","    /**","     *","     */","    public function admin(\\Base $f3, $params)","    {","        $bypass = ($params['action'] == 'template' && $params['sub_action'] == 'preview');","        ","        // check user is logged in","        if (empty($f3->get('SESSION.developer')) && !$bypass) {","            if ($params['action'] != 'sign-in') {","                $f3->reroute('/admin/sign-in');","            }","        }","        ","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value);","        }","        ","        //","        $_SESSION['template_path'] = 'app/template/';","        $_SESSION['template_id'] = null;","        ","        $action = str_replace('-', '_', strtolower($params['action']));","        $this->action = new Action\\Admin();","        ","        if (empty($action)) {","            $action = 'index';","        }","        ","        if (method_exists($this->action, $action)) {","            $this->action->{$action}($f3, $params);","        } else {","            $f3->error(404);","        }","    }","","}"],"id":1600},{"start":{"row":0,"column":0},"end":{"row":353,"column":1},"action":"insert","lines":["<?php","namespace Module\\Cms;","","class Controller extends \\Framework\\Controller","{","    /**","     *","     */","    public function __construct()","    {","        parent::__construct();","","        // load core models","        $this->user     = new \\Framework\\Model('user');","        $this->page     = new \\Framework\\Model('page');","        $this->menu     = new \\Framework\\Model('menu');","        $this->tasks    = new \\Framework\\Model('tasks');","        $this->module   = new \\Framework\\Model('module');","        $this->servers  = new \\Framework\\Model('servers');","        $this->objects  = new \\Framework\\Model('objects');","        $this->snippet  = new \\Framework\\Model('snippet');","        $this->template = new \\Framework\\Model('template');","        $this->settings = new \\Framework\\Model('settings');","        $this->tasksource = new \\Framework\\Model('tasksource');","    }","","    /**","     *","     */","    public function index(\\Base $f3, $params)","    {","        // load local plinker server config","        $server = $this->servers->load(1);","","        // if empty insert self into db","        if (empty($server->id)) {","            /**","             * Plinker Config","             */","            $plinker = [","                // plinker configuration","                'plinker' => [","                    // endpoint should point to this instance","                    'endpoint' => 'http://'.$_SERVER['HTTP_HOST'],","","                    // network keys","                    'public_key'  => hash('sha256', microtime(true).uniqid(true)),","","                    // should be the same across all servers","                    'private_key' => $f3->get('plinker.private_key'),","","                    'enabled' => $f3->get('plinker.enabled'),","                    'encrypted' => true","                ],","","                // database connection","                'database' => $f3->get('db'),","","                // displays output to task runner console","                'debug' => true,","","                // daemon sleep time","                'sleep_time' => 1","            ];","","            // insert config into database","            $server = $this->servers->create([","                'name'    => $_SERVER['HTTP_HOST'],","                'endpoint'    => $plinker['plinker']['endpoint'],","                'public_key' => $plinker['plinker']['public_key'],","                'private_key' => $plinker['plinker']['private_key'],","                'enabled' =>  $plinker['plinker']['enabled'],","                'encrypted' =>  $plinker['plinker']['encrypted'],","                'config' => json_encode($plinker)","            ]);","            $this->servers->store($server);","","            $server = $server->fresh();","        }","","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value);","        }","","        // plinker handler","        /**","         * Plinker Server","         */","        if ($_SERVER['REQUEST_METHOD'] == 'POST') {","","            /**","             * Plinker server listener","             */","            if (isset($_POST['data']) &&","                isset($_POST['token']) &&","                isset($_POST['public_key'])","            ) {","                // test its encrypted","                file_put_contents('./tmp/encryption-proof.txt', print_r($_POST, true));","","                //","                $server = new \\Plinker\\Core\\Server(","                    $_POST,","                    hash('sha256', gmdate('h').$server->public_key),","                    hash('sha256', gmdate('h').$server->private_key)","                );","                exit($server->execute());","            }","        }","","        if ($this->page->count() == 0) {","            $f3->set('setting.autogenerate', true);","        }","","        //","        if (!empty($f3->get('setting.autogenerate'))) {","            // create page (wiki style)","            $page = $this->page->findOrCreate([","                'site' => $_SERVER['HTTP_HOST'],","                'slug' => $f3->get('PATH')","            ]);","","            // hidden/completed status","            $page->hide = isset($page->hide) ? (empty($page->hide) ? 0 : 1) : 0;","","            // fix slug","            $slug = explode('/', '/'.trim($f3->get('PATH'), '/ '));","","            // define a module and assign it to it","            if (empty($page->module_id)) {","                $module = $this->module->findOrCreate([","                    'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')","                ]);","","                $page->module = $module;","            }","        } else {","            // get page by path","            $page = $this->page->findOne('site = ? AND slug = ?', [","                $_SERVER['HTTP_HOST'],","                $f3->get('PATH')","            ]);","","            // page not found","            if (empty($page)) {","                // second attempt - get page by dirname(path)","                $page = $this->page->findOne('site = ? AND slug = ?', [","                    $_SERVER['HTTP_HOST'],","                    dirname($f3->get('PATH'))","                ]);","","                // must be found","                if (empty($page)) {","                    $f3->error(404);","                }","            }","        }","","        // visibility","        // when not signed in","        if (!empty($f3->get('SESSION.user')) && $page->visibility == 2) {","            $f3->error(401);","        }","        // when signed in","        if (empty($f3->get('SESSION.user')) && $page->visibility == 3) {","            $f3->error(401);","        }","        // check for admin/developer","        if (empty($f3->get('SESSION.developer')) && $page->visibility == 4) {","            $f3->error(401);","        }","        // page is disabled","        if ($page->visibility == 5) {","            $f3->error(404);","        }","","        if (empty($page->template_id)) {","            $page->template_id = 1;","        }","","        if (empty($page->body) && $page->id == 1) {","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            Welcome <small> - to my little website.</small>","        </h1>","        <ol class=\"breadcrumb\">","            <li class=\"active\"><i class=\"fa fa-dashboard\"></i> Home</li>","        </ol>","    </div>","</div>","","<p>You can edit me by signing in <a href=\"/admin\">here</a> as <strong>admin:admin</strong>.</p>';","        } elseif (empty($page->body) && empty($page->views)) {","            if (empty($page->title)) {","                $page->title = ucwords(str_replace('/', ' - ', trim($f3->get('PATH'), '/ ')));","            }","","            $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","            $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\";","","            if (!empty($slug[2])) {","                $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-page-o\"></i> '.$slug[2].'</li>'.PHP_EOL.\"\\t\\t\";","            }","","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            '.$page->title.' <small> - Auto generated.</small>","        </h1>","        <ol class=\"breadcrumb\">","            '.$breadcrumb.'</ol>","    </div>","</div>","","<p>","    This page and any associated module have been automatically generated.","    You should now go code it <a href=\"/admin/page/edit/'.$page->id.'\">here</a>.<br>","    If you no longer want pages to be automatically generated then <a href=\"/admin/settings\">turn off the setting here</a>.","</p>","';","        }","","        //","        $_SESSION['template_path'] = 'tmp/template/';","        $_SESSION['template_id']   = (int) $page->template_id;","","        $page->views = (int) $page->views+1;","","        $this->page->store($page);","","        // get menus","        $f3->set('menus', (array) $this->menu->findAll('ORDER BY `order` ASC, id ASC'));","","        // execute all object code","        foreach ((array) $this->objects->findAll('ORDER BY priority ASC, id ASC') as $row) {","            ob_start();","            eval('?>'.$row->source);","            $page->body = ob_get_clean().$page->body;","        }","","        // execute module beforeload source","        ob_start();","        eval('?>'.@$page->module->beforeload);","        $page->body = ob_get_clean().$page->body;","","        // execute page beforeload","        if (!empty($page->beforeload)) {","            ob_start();","            eval('?>'.$page->beforeload);","            $page->body = ob_get_clean().$page->body;","        }","","        // execute page body","        if (!empty($page->body)) {","            ob_start();","            eval('?>'.$page->body);","            $page->body = ob_get_clean();","        }","","        // execute page javascript","        if (!empty($page->javascript)) {","            ob_start();","            eval('?>'.$page->javascript);","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        // execute page css","        if (!empty($page->css)) {","            ob_start();","            eval('?>'.$page->css);","            $f3->set('css', $f3->get('css').ob_get_clean());","        }","","        // inject additional js for live preview","        if (!empty($f3->get('SESSION.developer'))) {","            ob_start();","            ?>","            <script>","            // developer only - cross tab live content preview","            $(document).ready(function() {","                if ($('.ajax-container').length > 0) {","                    $(window).bind('storage', function(e) {","                        $('.ajax-container').html($('<div />').html(window.localStorage.getItem('preview-body')));","                    });","                }","            });","            </script>","            <?php","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        // check template exists - fallback to default","        if (!file_exists('tmp/template/'.$page->template_id.'/template.php')) {","            //","            $_SESSION['template_path'] = 'app/template/';","            $_SESSION['template_id'] = null;","            $template = 'app/template/template.php';","        } else {","            $template = 'tmp/template/'.$page->template_id.'/template.php';","        }","","        //","        $f3->mset([","            'template' => $template,","            'page' => [","                'page_id' => $page->id,","                'title' => $page->title,","                'body' => $page->body","            ]","        ]);","    }","","    /**","     *","     */","    public function admin(\\Base $f3, $params)","    {","        $bypass = ($params['action'] == 'template' && $params['sub_action'] == 'preview');","","        // check user is logged in","        if (empty($f3->get('SESSION.developer')) && !$bypass) {","            if ($params['action'] != 'sign-in') {","                $f3->reroute('/admin/sign-in');","            }","        }","","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value);","        }","","        //","        $_SESSION['template_path'] = 'app/template/';","        $_SESSION['template_id'] = null;","","        $action = str_replace('-', '_', strtolower($params['action']));","        $this->action = new Action\\Admin();","","        if (empty($action)) {","            $action = 'index';","        }","","        if (method_exists($this->action, $action)) {","            $this->action->{$action}($f3, $params);","        } else {","            $f3->error(404);","        }","    }","","}"]}],[{"start":{"row":298,"column":55},"end":{"row":298,"column":63},"action":"insert","lines":["default/"],"id":1602}],[{"start":{"row":300,"column":38},"end":{"row":300,"column":46},"action":"insert","lines":["default/"],"id":1603}],[{"start":{"row":336,"column":51},"end":{"row":336,"column":59},"action":"insert","lines":["default/"],"id":1604}],[{"start":{"row":119,"column":0},"end":{"row":119,"column":48},"action":"remove","lines":["                'site' => $_SERVER['HTTP_HOST'],"],"id":1605}],[{"start":{"row":118,"column":47},"end":{"row":119,"column":0},"action":"remove","lines":["",""],"id":1606}],[{"start":{"row":139,"column":0},"end":{"row":139,"column":38},"action":"remove","lines":["                $_SERVER['HTTP_HOST'],"],"id":1607}],[{"start":{"row":138,"column":67},"end":{"row":139,"column":0},"action":"remove","lines":["",""],"id":1608}],[{"start":{"row":138,"column":42},"end":{"row":138,"column":55},"action":"remove","lines":["site = ? AND "],"id":1609}],[{"start":{"row":145,"column":46},"end":{"row":145,"column":59},"action":"remove","lines":["site = ? AND "],"id":1610}],[{"start":{"row":146,"column":0},"end":{"row":146,"column":42},"action":"remove","lines":["                    $_SERVER['HTTP_HOST'],"],"id":1611}],[{"start":{"row":145,"column":58},"end":{"row":146,"column":0},"action":"remove","lines":["",""],"id":1612}],[{"start":{"row":194,"column":13},"end":{"row":195,"column":0},"action":"insert","lines":["",""],"id":1613},{"start":{"row":195,"column":0},"end":{"row":195,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":195,"column":12},"end":{"row":196,"column":0},"action":"insert","lines":["",""],"id":1614},{"start":{"row":196,"column":0},"end":{"row":196,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":196,"column":12},"end":{"row":196,"column":38},"action":"insert","lines":["if (empty($page->title)) {"],"id":1615}],[{"start":{"row":196,"column":38},"end":{"row":196,"column":39},"action":"insert","lines":["}"],"id":1616}],[{"start":{"row":196,"column":38},"end":{"row":198,"column":12},"action":"insert","lines":["","                ","            "],"id":1617}],[{"start":{"row":197,"column":16},"end":{"row":197,"column":28},"action":"insert","lines":["$page->title"],"id":1618}],[{"start":{"row":197,"column":28},"end":{"row":197,"column":29},"action":"insert","lines":[" "],"id":1619}],[{"start":{"row":197,"column":29},"end":{"row":197,"column":30},"action":"insert","lines":["="],"id":1620}],[{"start":{"row":197,"column":30},"end":{"row":197,"column":31},"action":"insert","lines":[" "],"id":1621}],[{"start":{"row":197,"column":31},"end":{"row":197,"column":33},"action":"insert","lines":["''"],"id":1622}],[{"start":{"row":197,"column":33},"end":{"row":197,"column":34},"action":"insert","lines":[";"],"id":1623}],[{"start":{"row":197,"column":32},"end":{"row":197,"column":33},"action":"insert","lines":["H"],"id":1624}],[{"start":{"row":197,"column":33},"end":{"row":197,"column":34},"action":"insert","lines":["o"],"id":1625}],[{"start":{"row":197,"column":34},"end":{"row":197,"column":35},"action":"insert","lines":["m"],"id":1626}],[{"start":{"row":197,"column":35},"end":{"row":197,"column":36},"action":"insert","lines":["e"],"id":1627}],[{"start":{"row":212,"column":53},"end":{"row":212,"column":54},"action":"insert","lines":[" "],"id":1628}],[{"start":{"row":212,"column":54},"end":{"row":212,"column":55},"action":"insert","lines":["p"],"id":1629}],[{"start":{"row":212,"column":55},"end":{"row":212,"column":56},"action":"insert","lines":["a"],"id":1630}],[{"start":{"row":212,"column":56},"end":{"row":212,"column":57},"action":"insert","lines":["g"],"id":1631}],[{"start":{"row":212,"column":57},"end":{"row":212,"column":58},"action":"insert","lines":["e"],"id":1632}],[{"start":{"row":338,"column":40},"end":{"row":339,"column":0},"action":"insert","lines":["",""],"id":1633},{"start":{"row":339,"column":0},"end":{"row":339,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":339,"column":8},"end":{"row":340,"column":0},"action":"insert","lines":["",""],"id":1634},{"start":{"row":340,"column":0},"end":{"row":340,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":340,"column":8},"end":{"row":341,"column":47},"action":"insert","lines":["// AJAX","                if (!empty($f3->get('AJAX'))) {"],"id":1635}],[{"start":{"row":341,"column":47},"end":{"row":341,"column":48},"action":"insert","lines":["}"],"id":1636}],[{"start":{"row":341,"column":16},"end":{"row":341,"column":17},"action":"remove","lines":["i"],"id":1637}],[{"start":{"row":341,"column":12},"end":{"row":341,"column":16},"action":"remove","lines":["    "],"id":1638}],[{"start":{"row":341,"column":8},"end":{"row":341,"column":12},"action":"remove","lines":["    "],"id":1639}],[{"start":{"row":341,"column":8},"end":{"row":341,"column":9},"action":"insert","lines":["i"],"id":1640}],[{"start":{"row":341,"column":39},"end":{"row":343,"column":8},"action":"insert","lines":["","            ","        "],"id":1641}],[{"start":{"row":342,"column":12},"end":{"row":343,"column":66},"action":"insert","lines":["$f3->mset([","                    'template' => 'app/module/cms/view/admin.php',"],"id":1642}],[{"start":{"row":342,"column":17},"end":{"row":342,"column":18},"action":"remove","lines":["m"],"id":1643}],[{"start":{"row":342,"column":21},"end":{"row":343,"column":20},"action":"remove","lines":["[","                    "],"id":1644}],[{"start":{"row":342,"column":66},"end":{"row":342,"column":67},"action":"remove","lines":[","],"id":1645}],[{"start":{"row":342,"column":66},"end":{"row":342,"column":67},"action":"insert","lines":[")"],"id":1646}],[{"start":{"row":342,"column":67},"end":{"row":342,"column":68},"action":"insert","lines":[";"],"id":1647}],[{"start":{"row":342,"column":33},"end":{"row":342,"column":34},"action":"remove","lines":[">"],"id":1648}],[{"start":{"row":342,"column":32},"end":{"row":342,"column":33},"action":"remove","lines":["="],"id":1649}],[{"start":{"row":342,"column":31},"end":{"row":342,"column":32},"action":"remove","lines":[" "],"id":1650}],[{"start":{"row":342,"column":31},"end":{"row":342,"column":32},"action":"insert","lines":[","],"id":1651}],[{"start":{"row":342,"column":54},"end":{"row":342,"column":59},"action":"remove","lines":["admin"],"id":1652},{"start":{"row":342,"column":54},"end":{"row":342,"column":55},"action":"insert","lines":["a"]}],[{"start":{"row":342,"column":55},"end":{"row":342,"column":56},"action":"insert","lines":["j"],"id":1653}],[{"start":{"row":342,"column":56},"end":{"row":342,"column":57},"action":"insert","lines":["a"],"id":1654}],[{"start":{"row":342,"column":57},"end":{"row":342,"column":58},"action":"insert","lines":["x"],"id":1655}],[{"start":{"row":340,"column":0},"end":{"row":343,"column":9},"action":"remove","lines":["        // AJAX","        if (!empty($f3->get('AJAX'))) {","            $f3->set('template', 'app/module/cms/view/ajax.php');","        }"],"id":1656}],[{"start":{"row":340,"column":0},"end":{"row":341,"column":0},"action":"remove","lines":["",""],"id":1657}],[{"start":{"row":339,"column":8},"end":{"row":340,"column":0},"action":"remove","lines":["",""],"id":1658}],[{"start":{"row":348,"column":51},"end":{"row":349,"column":0},"action":"insert","lines":["",""],"id":1659},{"start":{"row":349,"column":0},"end":{"row":349,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":349,"column":12},"end":{"row":352,"column":9},"action":"insert","lines":["        // AJAX","        if (!empty($f3->get('AJAX'))) {","            $f3->set('template', 'app/module/cms/view/ajax.php');","        }"],"id":1660}],[{"start":{"row":350,"column":0},"end":{"row":350,"column":4},"action":"insert","lines":["    "],"id":1661},{"start":{"row":351,"column":0},"end":{"row":351,"column":4},"action":"insert","lines":["    "]},{"start":{"row":352,"column":0},"end":{"row":352,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":349,"column":16},"end":{"row":349,"column":20},"action":"remove","lines":["    "],"id":1662}],[{"start":{"row":349,"column":12},"end":{"row":349,"column":16},"action":"remove","lines":["    "],"id":1663}],[{"start":{"row":349,"column":12},"end":{"row":350,"column":0},"action":"insert","lines":["",""],"id":1664},{"start":{"row":350,"column":0},"end":{"row":350,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":350,"column":19},"end":{"row":350,"column":20},"action":"insert","lines":[" "],"id":1665}],[{"start":{"row":350,"column":20},"end":{"row":350,"column":21},"action":"insert","lines":["-"],"id":1666}],[{"start":{"row":350,"column":21},"end":{"row":350,"column":22},"action":"insert","lines":[" "],"id":1667}],[{"start":{"row":350,"column":22},"end":{"row":350,"column":23},"action":"insert","lines":["S"],"id":1668}],[{"start":{"row":350,"column":23},"end":{"row":350,"column":24},"action":"insert","lines":["w"],"id":1669}],[{"start":{"row":350,"column":24},"end":{"row":350,"column":25},"action":"insert","lines":["i"],"id":1670}],[{"start":{"row":350,"column":25},"end":{"row":350,"column":26},"action":"insert","lines":["t"],"id":1671}],[{"start":{"row":350,"column":26},"end":{"row":350,"column":27},"action":"insert","lines":["c"],"id":1672}],[{"start":{"row":350,"column":27},"end":{"row":350,"column":28},"action":"insert","lines":["h"],"id":1673}],[{"start":{"row":350,"column":28},"end":{"row":350,"column":29},"action":"insert","lines":[" "],"id":1674}],[{"start":{"row":350,"column":29},"end":{"row":350,"column":30},"action":"insert","lines":["t"],"id":1675}],[{"start":{"row":350,"column":30},"end":{"row":350,"column":31},"action":"insert","lines":["o"],"id":1676}],[{"start":{"row":350,"column":31},"end":{"row":350,"column":32},"action":"insert","lines":[" "],"id":1677}],[{"start":{"row":350,"column":32},"end":{"row":350,"column":33},"action":"insert","lines":["a"],"id":1678}],[{"start":{"row":350,"column":33},"end":{"row":350,"column":34},"action":"insert","lines":["j"],"id":1679}],[{"start":{"row":350,"column":34},"end":{"row":350,"column":35},"action":"insert","lines":["a"],"id":1680}],[{"start":{"row":350,"column":35},"end":{"row":350,"column":36},"action":"insert","lines":["x"],"id":1681}],[{"start":{"row":350,"column":36},"end":{"row":350,"column":37},"action":"insert","lines":[" "],"id":1682}],[{"start":{"row":350,"column":37},"end":{"row":350,"column":38},"action":"insert","lines":["t"],"id":1683}],[{"start":{"row":350,"column":38},"end":{"row":350,"column":39},"action":"insert","lines":["e"],"id":1684}],[{"start":{"row":350,"column":39},"end":{"row":350,"column":40},"action":"insert","lines":["m"],"id":1685}],[{"start":{"row":350,"column":40},"end":{"row":350,"column":41},"action":"insert","lines":["p"],"id":1686}],[{"start":{"row":350,"column":41},"end":{"row":350,"column":42},"action":"insert","lines":["l"],"id":1687}],[{"start":{"row":350,"column":42},"end":{"row":350,"column":43},"action":"insert","lines":["a"],"id":1688}],[{"start":{"row":350,"column":43},"end":{"row":350,"column":44},"action":"insert","lines":["t"],"id":1689}],[{"start":{"row":350,"column":44},"end":{"row":350,"column":45},"action":"insert","lines":["e"],"id":1690}],[{"start":{"row":0,"column":0},"end":{"row":359,"column":1},"action":"remove","lines":["<?php","namespace Module\\Cms;","","class Controller extends \\Framework\\Controller","{","    /**","     *","     */","    public function __construct()","    {","        parent::__construct();","","        // load core models","        $this->user     = new \\Framework\\Model('user');","        $this->page     = new \\Framework\\Model('page');","        $this->menu     = new \\Framework\\Model('menu');","        $this->tasks    = new \\Framework\\Model('tasks');","        $this->module   = new \\Framework\\Model('module');","        $this->servers  = new \\Framework\\Model('servers');","        $this->objects  = new \\Framework\\Model('objects');","        $this->snippet  = new \\Framework\\Model('snippet');","        $this->template = new \\Framework\\Model('template');","        $this->settings = new \\Framework\\Model('settings');","        $this->tasksource = new \\Framework\\Model('tasksource');","    }","","    /**","     *","     */","    public function index(\\Base $f3, $params)","    {","        // load local plinker server config","        $server = $this->servers->load(1);","","        // if empty insert self into db","        if (empty($server->id)) {","            /**","             * Plinker Config","             */","            $plinker = [","                // plinker configuration","                'plinker' => [","                    // endpoint should point to this instance","                    'endpoint' => 'http://'.$_SERVER['HTTP_HOST'],","","                    // network keys","                    'public_key'  => hash('sha256', microtime(true).uniqid(true)),","","                    // should be the same across all servers","                    'private_key' => $f3->get('plinker.private_key'),","","                    'enabled' => $f3->get('plinker.enabled'),","                    'encrypted' => true","                ],","","                // database connection","                'database' => $f3->get('db'),","","                // displays output to task runner console","                'debug' => true,","","                // daemon sleep time","                'sleep_time' => 1","            ];","","            // insert config into database","            $server = $this->servers->create([","                'name'    => $_SERVER['HTTP_HOST'],","                'endpoint'    => $plinker['plinker']['endpoint'],","                'public_key' => $plinker['plinker']['public_key'],","                'private_key' => $plinker['plinker']['private_key'],","                'enabled' =>  $plinker['plinker']['enabled'],","                'encrypted' =>  $plinker['plinker']['encrypted'],","                'config' => json_encode($plinker)","            ]);","            $this->servers->store($server);","","            $server = $server->fresh();","        }","","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value);","        }","","        // plinker handler","        /**","         * Plinker Server","         */","        if ($_SERVER['REQUEST_METHOD'] == 'POST') {","","            /**","             * Plinker server listener","             */","            if (isset($_POST['data']) &&","                isset($_POST['token']) &&","                isset($_POST['public_key'])","            ) {","                // test its encrypted","                file_put_contents('./tmp/encryption-proof.txt', print_r($_POST, true));","","                //","                $server = new \\Plinker\\Core\\Server(","                    $_POST,","                    hash('sha256', gmdate('h').$server->public_key),","                    hash('sha256', gmdate('h').$server->private_key)","                );","                exit($server->execute());","            }","        }","","        if ($this->page->count() == 0) {","            $f3->set('setting.autogenerate', true);","        }","","        //","        if (!empty($f3->get('setting.autogenerate'))) {","            // create page (wiki style)","            $page = $this->page->findOrCreate([","                'slug' => $f3->get('PATH')","            ]);","","            // hidden/completed status","            $page->hide = isset($page->hide) ? (empty($page->hide) ? 0 : 1) : 0;","","            // fix slug","            $slug = explode('/', '/'.trim($f3->get('PATH'), '/ '));","","            // define a module and assign it to it","            if (empty($page->module_id)) {","                $module = $this->module->findOrCreate([","                    'name' => (!empty($slug[1]) && is_string($slug[1]) ? ucfirst($slug[1]) : '-')","                ]);","","                $page->module = $module;","            }","        } else {","            // get page by path","            $page = $this->page->findOne('slug = ?', [","                $f3->get('PATH')","            ]);","","            // page not found","            if (empty($page)) {","                // second attempt - get page by dirname(path)","                $page = $this->page->findOne('slug = ?', [","                    dirname($f3->get('PATH'))","                ]);","","                // must be found","                if (empty($page)) {","                    $f3->error(404);","                }","            }","        }","","        // visibility","        // when not signed in","        if (!empty($f3->get('SESSION.user')) && $page->visibility == 2) {","            $f3->error(401);","        }","        // when signed in","        if (empty($f3->get('SESSION.user')) && $page->visibility == 3) {","            $f3->error(401);","        }","        // check for admin/developer","        if (empty($f3->get('SESSION.developer')) && $page->visibility == 4) {","            $f3->error(401);","        }","        // page is disabled","        if ($page->visibility == 5) {","            $f3->error(404);","        }","","        if (empty($page->template_id)) {","            $page->template_id = 1;","        }","","        if (empty($page->body) && $page->id == 1) {","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            Welcome <small> - to my little website.</small>","        </h1>","        <ol class=\"breadcrumb\">","            <li class=\"active\"><i class=\"fa fa-dashboard\"></i> Home</li>","        </ol>","    </div>","</div>","","<p>You can edit me by signing in <a href=\"/admin\">here</a> as <strong>admin:admin</strong>.</p>';","        } elseif (empty($page->body) && empty($page->views)) {","            if (empty($page->title)) {","                $page->title = ucwords(str_replace('/', ' - ', trim($f3->get('PATH'), '/ ')));","            }","            ","            if (empty($page->title)) {","                $page->title = 'Home';","            }","","            $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","            $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\";","","            if (!empty($slug[2])) {","                $breadcrumb = '<li><a href=\"/\"><i class=\"fa fa-dashboard\"></i> Home</a></li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li><i class=\"fa fa-folder-o\"></i> '.$page->module->name.'</li>'.PHP_EOL.\"\\t\\t\\t\";","                $breadcrumb .= '<li class=\"active\"><i class=\"fa fa-page-o\"></i> '.$slug[2].'</li>'.PHP_EOL.\"\\t\\t\";","            }","","            $page->body = '<div class=\"row\">","    <div class=\"col-lg-12\">","        <h1 class=\"page-header\">","            '.$page->title.' <small> - Auto generated page.</small>","        </h1>","        <ol class=\"breadcrumb\">","            '.$breadcrumb.'</ol>","    </div>","</div>","","<p>","    This page and any associated module have been automatically generated.","    You should now go code it <a href=\"/admin/page/edit/'.$page->id.'\">here</a>.<br>","    If you no longer want pages to be automatically generated then <a href=\"/admin/settings\">turn off the setting here</a>.","</p>","';","        }","","        //","        $_SESSION['template_path'] = 'tmp/template/';","        $_SESSION['template_id']   = (int) $page->template_id;","","        $page->views = (int) $page->views+1;","","        $this->page->store($page);","","        // get menus","        $f3->set('menus', (array) $this->menu->findAll('ORDER BY `order` ASC, id ASC'));","","        // execute all object code","        foreach ((array) $this->objects->findAll('ORDER BY priority ASC, id ASC') as $row) {","            ob_start();","            eval('?>'.$row->source);","            $page->body = ob_get_clean().$page->body;","        }","","        // execute module beforeload source","        ob_start();","        eval('?>'.@$page->module->beforeload);","        $page->body = ob_get_clean().$page->body;","","        // execute page beforeload","        if (!empty($page->beforeload)) {","            ob_start();","            eval('?>'.$page->beforeload);","            $page->body = ob_get_clean().$page->body;","        }","","        // execute page body","        if (!empty($page->body)) {","            ob_start();","            eval('?>'.$page->body);","            $page->body = ob_get_clean();","        }","","        // execute page javascript","        if (!empty($page->javascript)) {","            ob_start();","            eval('?>'.$page->javascript);","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        // execute page css","        if (!empty($page->css)) {","            ob_start();","            eval('?>'.$page->css);","            $f3->set('css', $f3->get('css').ob_get_clean());","        }","","        // inject additional js for live preview","        if (!empty($f3->get('SESSION.developer'))) {","            ob_start();","            ?>","            <script>","            // developer only - cross tab live content preview","            $(document).ready(function() {","                if ($('.ajax-container').length > 0) {","                    $(window).bind('storage', function(e) {","                        $('.ajax-container').html($('<div />').html(window.localStorage.getItem('preview-body')));","                    });","                }","            });","            </script>","            <?php","            $f3->set('javascript', $f3->get('javascript').ob_get_clean());","        }","","        // check template exists - fallback to default","        if (!file_exists('tmp/template/'.$page->template_id.'/template.php')) {","            //","            $_SESSION['template_path'] = 'app/template/default/';","            $_SESSION['template_id'] = null;","            $template = 'app/template/default/template.php';","        } else {","            $template = 'tmp/template/'.$page->template_id.'/template.php';","        }","","        //","        $f3->mset([","            'template' => $template,","            'page' => [","                'page_id' => $page->id,","                'title' => $page->title,","                'body' => $page->body","            ]","        ]);","    }","","    /**","     *","     */","    public function admin(\\Base $f3, $params)","    {","        $bypass = ($params['action'] == 'template' && $params['sub_action'] == 'preview');","","        // check user is logged in","        if (empty($f3->get('SESSION.developer')) && !$bypass) {","            if ($params['action'] != 'sign-in') {","                $f3->reroute('/admin/sign-in');","            }","        }","","        // get site settings","        foreach ((array) $this->settings->findAll() as $row) {","            $f3->set('setting.'.$row->key, $row->value);","        }","","        //","        $_SESSION['template_path'] = 'app/template/default/';","        $_SESSION['template_id'] = null;","        ","        $action = str_replace('-', '_', strtolower($params['action']));","        $this->action = new Action\\Admin();","","        if (empty($action)) {","            $action = 'index';","        }","","        if (method_exists($this->action, $action)) {","            $this->action->{$action}($f3, $params);","            ","            // AJAX - Switch to ajax template","            if (!empty($f3->get('AJAX'))) {","                $f3->set('template', 'app/module/cms/view/ajax.php');","            }","        } else {","            $f3->error(404);","        }","    }","","}"],"id":1691},{"start":{"row":0,"column":0},"end":{"row":38,"column":7},"action":"insert","lines":["<title>Registered!</title>","</head>","<body>","<?php","error_reporting(E_ALL);","ini_set('display_errors', 1);","","define('DB_SERVER', 'localhost');","define('DB_USERNAME', 'username');","define('DB_PASSWORD', 'password');","define('DB_DATABASE', 'database');","","$db = mysqli_connect(DB_SERVER,DB_USERNAME,DB_PASSWORD,DB_DATABASE);","","","if(isset($_POST['submit']))","{","  $name = $_POST['username'];","  $password = $_POST['password'];","  $email = $_POST['email'];","","  $username = mysqli_real_escape_string($db, $name);","  $email = mysqli_real_escape_string($db, $email);","  $password = mysqli_real_escape_string($db, $password);","","  $query = mysqli_query($db, \"INSERT INTO users (username, password, ","email)VALUES ('$name', '$password', '$email')\");","  if($query)","  {","    echo \"You are now registered!\";","  }","  else ","  {","      echo \"failed\";  ","  }","}","?>","</body>","</html>"]}]]},"ace":{"folds":[],"scrolltop":4066,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":359,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":337,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1503871079977}